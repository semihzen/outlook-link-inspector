{"version":3,"file":"taskpane.js","mappings":"6KACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECzBxBN,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBb,EAAoBc,EAAI,SAASC,EAAKC,GAAQ,OAAOC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,EAAO,E,WCAtG,IAAIK,EACArB,EAAoBQ,EAAEc,gBAAeD,EAAYrB,EAAoBQ,EAAEe,SAAW,IACtF,IAAIC,EAAWxB,EAAoBQ,EAAEgB,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,SAAU,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KAC1GnC,EAAoBoC,EAAIf,C,IClBxBrB,EAAoBqC,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,KCA1DC,OAAOC,QAAQ,SAAAC,GACbC,QAAQC,IAAI,+BAAgCF,GACxCA,EAAKG,OAASL,OAAOM,SAASC,UAChCJ,QAAQC,IAAI,2BAEZJ,OAAOQ,QAAQC,QAAQC,KAAKC,KAAKC,SAAS,OAAQ,CAAEC,aAAc,MAAQ,SAAUC,GAClF,GAAIA,EAAOC,SAAWf,OAAOgB,kBAAkBC,UAAW,CAMxD,IALA,IAGIC,EAHEC,EAAcL,EAAOM,MACrBC,EAAY,0CACZC,EAAQ,GAGmC,QAAzCJ,EAAQG,EAAUE,KAAKJ,KAC7BG,EAAME,KAAKN,EAAM,IAGnB,IAAMO,EAAY1C,SAAS2C,eAAe,iBAC1CD,EAAUE,UAAY,GAED,IAAjBL,EAAMhC,OACRmC,EAAUG,UAAY,gCAEtBN,EAAMO,QAAQ,SAAAC,GACZ,IAAMC,EAAUhD,SAASiD,cAAc,OACvCD,EAAQE,UAAY,WAEpB,IAAMC,EAASnD,SAASiD,cAAc,KACtCE,EAAOnC,KAAO,IACdmC,EAAOC,YAAcL,EACrBI,EAAOD,UAAY,YACnBC,EAAOE,MAAQ,oCACfF,EAAOG,QAAU,SAAClE,GAgB9B,IAA+BmE,EAfjBnE,EAAEoE,iBAeeD,EAdKR,EAelC1D,OAAOoE,KAAK,yCAADC,OAA0CC,mBAAmBJ,IAAQ,cAAe,uBAdrF,EAEAP,EAAQY,YAAYT,GACpBT,EAAUkB,YAAYZ,EACxB,EAEJ,MACE5B,QAAQyC,MAAM,+BAAgC9B,EAAO8B,MAEzD,GAEJ,G,wBC5CiC,IAAIC,IAAI,cACR,IAAIA,IAAI,a","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","Office.onReady(info => {\n  console.log(\"üü° Office.onReady has begin:\", info);\n  if (info.host === Office.HostType.Outlook) {\n    console.log(\"‚úÖ Outlook host detected\");\n\n    Office.context.mailbox.item.body.getAsync(\"html\", { asyncContext: null }, function (result) {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        const htmlContent = result.value;\n        const linkRegex = /<a\\s+(?:[^>]*?\\s+)?href=([\"'])(.*?)\\1/gi;\n        const links = [];\n        let match;\n\n        while ((match = linkRegex.exec(htmlContent)) !== null) {\n          links.push(match[2]);\n        }\n\n        const container = document.getElementById(\"linkContainer\");\n        container.innerHTML = \"\";\n\n        if (links.length === 0) {\n          container.innerText = \"No links found in this email.\";\n        } else {\n          links.forEach(link => {\n            const linkBox = document.createElement(\"div\");\n            linkBox.className = \"link-box\";\n\n            const linkEl = document.createElement(\"a\");\n            linkEl.href = \"#\";\n            linkEl.textContent = link;\n            linkEl.className = \"link-text\";\n            linkEl.title = \"Click to open confirmation dialog\";\n            linkEl.onclick = (e) => {\n              e.preventDefault();\n              openConfirmationPopup(link);\n            };\n\n            linkBox.appendChild(linkEl);\n            container.appendChild(linkBox);\n          });\n        }\n      } else {\n        console.error(\"‚ùå Could not load email body:\", result.error);\n      }\n    });\n  }\n});\n\nfunction openConfirmationPopup(url) {\n  window.open(`https://localhost:3000/popup.html?url=${encodeURIComponent(url)}`, \"LinkConfirm\", \"width=440,height=400\");\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"utf-8\\\"/> <title>Link Interceptor</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"/> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> </head> <body> <h2>Links found in this email:</h2> <div id=\\\"linkContainer\\\">Loading...</div> <div id=\\\"modalOverlay\\\" class=\\\"modal-overlay\\\" style=\\\"display:none\\\"> <div class=\\\"modal-box\\\"> <p>Do you want to proceed to this link?</p> <p id=\\\"modalLink\\\" class=\\\"modal-link\\\"></p> <div class=\\\"modal-buttons\\\"> <button id=\\\"confirmBtn\\\">Continue</button> <button id=\\\"cancelBtn\\\">Cancel</button> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","Office","onReady","info","console","log","host","HostType","Outlook","context","mailbox","item","body","getAsync","asyncContext","result","status","AsyncResultStatus","Succeeded","match","htmlContent","value","linkRegex","links","exec","push","container","getElementById","innerHTML","innerText","forEach","link","linkBox","createElement","className","linkEl","textContent","title","onclick","url","preventDefault","open","concat","encodeURIComponent","appendChild","error","URL"],"sourceRoot":""}